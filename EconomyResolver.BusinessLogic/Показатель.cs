using EconomyResolver.BusinessLogic.Enums;
using Newtonsoft.Json;
using static EconomyResolver.BusinessLogic.Константы;

namespace EconomyResolver.BusinessLogic
{
    public class Показатель
    {
        public static readonly НаборПоказателей Показатели = new НаборПоказателей
        {
            [n] = Новый(n, 25, ЕдиницаИзмерения.Штуки),
            [Сn] = Новый(Сn, 85000),
            [На] = Новый(На, 13, ЕдиницаИзмерения.Проценты),
            [Нвр] = Новый(Нвр, 2),
            [N] = Новый(N, 3, ЕдиницаИзмерения.Штуки),
            [Tсм] = Новый(Tсм, 8, ЕдиницаИзмерения.Часы),
            [а] = Новый(а, 4.5, ЕдиницаИзмерения.Проценты),
            [Ким] = Новый(Ким, 75, ЕдиницаИзмерения.Проценты),
            [См] = Новый(См, 3_359_020),
            [Сэ] = Новый(Сэ, 1_103_600),
            [Нк] = Новый(Нк, 2, ЕдиницаИзмерения.Проценты),
            [З] = Новый(З, 135, ЕдиницаИзмерения.Проценты),
            [Нп] = Новый(Нп, 25, ЕдиницаИзмерения.Проценты),
            [Онг] = Новый(Онг, 1850, ЕдиницаИзмерения.Штуки),
            [Окг] = Новый(Окг, 1650, ЕдиницаИзмерения.Штуки),
            [Рнп] = Новый(Рнп, 770, ЕдиницаИзмерения.Штуки),
            [Tп] = Новый(Tп, 11, ЕдиницаИзмерения.Дни),
            [Tв] = Новый(Tв, 104, ЕдиницаИзмерения.Дни),
            [Сч] = Новый(Сч, 67, ЕдиницаИзмерения.Часы),
            [Чосн_пр_р] = Новый(Чосн_пр_р, 30, ЕдиницаИзмерения.Люди),
            
            [Сч_слес] = Новый(Сч_слес, 46.50, ЕдиницаИзмерения.РублиВЧас),
            [Сч_нал] = Новый(Сч_нал, 53.50, ЕдиницаИзмерения.РублиВЧас),
            [Сч_эл] = Новый(Сч_эл, 57.00, ЕдиницаИзмерения.РублиВЧас),
            [Онач] = Новый(Онач, 31_500),
            [Омас] = Новый(Омас, 23_000),
            [Отех] = Новый(Отех, 17_100),
            [Обух] = Новый(Обух, 20_800),
            [Чслес] = Новый(Чслес, 1, ЕдиницаИзмерения.Люди),
            [Чнал] = Новый(Чнал, 1, ЕдиницаИзмерения.Люди),
            [Чэл] = Новый(Чэл, 1, ЕдиницаИзмерения.Люди),
            [Чвсп_р] = Новый(Чвсп_р, 3, ЕдиницаИзмерения.Люди),
            [Чспец] = Новый(Чспец, 3, ЕдиницаИзмерения.Люди),
            [Чслуж] = Новый(Чслуж, 1, ЕдиницаИзмерения.Люди)
        };

        [JsonProperty("name")]
        public string Наименование { get; set; }

        private double _значение;

        [JsonProperty("value")]
        public double Значение
        {
            get => ЕдиницаИзмерения is ЕдиницаИзмерения.Проценты ? _значение / 100 : _значение;
            set => _значение = value;
        }

        [JsonProperty("unit")]
        public ЕдиницаИзмерения ЕдиницаИзмерения { get; set; }

        public Показатель()
        {
        }

        public Показатель(string Наименование, ЕдиницаИзмерения ЕдиницаИзмерения)
        {
            this.Наименование = Наименование;
            this.ЕдиницаИзмерения = ЕдиницаИзмерения;
        }

        public Показатель(string Наименование, double Значение, ЕдиницаИзмерения ЕдиницаИзмерения)
        {
            this.Наименование = Наименование;
            this.Значение = Значение;
            this.ЕдиницаИзмерения = ЕдиницаИзмерения;
        }

        public static Показатель Новый(string Название, double Значение, ЕдиницаИзмерения ЕдиницаИзмерения = ЕдиницаИзмерения.Рубли)
            => new Показатель(Название, Значение, ЕдиницаИзмерения);

        public override string ToString() => $"{Наименование} = {Значение} ({ЕдиницаИзмерения.ПолучитьОписание()})";
        public string ToShortString() => $"{Значение} ({ЕдиницаИзмерения.ПолучитьОписание()})";
        public override int GetHashCode() => Наименование.GetHashCode() + Значение.GetHashCode() + ЕдиницаИзмерения.GetHashCode();
        public override bool Equals(object obj) => obj is Показатель dm && dm.GetHashCode() == GetHashCode();
    }
}
